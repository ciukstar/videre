
document.getElementById(#{fvId v}).onchange = function (e) {

  const progress = document.createElement('md-circular-progress');
  progress.setAttribute('indeterminate','');
  progress.style.position = 'absolute';
  progress.style.top = 0;
  progress.style.right = 0;
  progress.style.bottom = 0;
  progress.style.left = 0;
  progress.style.margin = 'auto';
  document.getElementById(#{idFormFieldSubscribe}).appendChild(progress);
  
  if (this.selected) {

    Notification.requestPermission().then(function (permission) {
      
      if (permission === 'granted') {
	
        navigator.serviceWorker.ready.then((registration) => {

	  registration.pushManager.subscribe({
            userVisibleOnly: true,
	    applicationServerKey: new Uint8Array(#{toJSON applicationServerKey})
          }).then(function (subscription) {
	    
	    if (subscription) {
	      const subscr = JSON.parse( JSON.stringify(subscription) );
	      subscr.subscriber = #{rawJS subscriberId};
	      subscr.publisher = #{rawJS publisherId};
	      
	      fetch('@{PushSubscriptionsR sid pid}', {
		method: 'POST',
		headers: { 'Content-Type': 'application/json' },
		body: JSON.stringify(subscr)
	      }).then((response) => {
		localStorage.setItem(#{keyWebPushSubscriptionEndpoint}, subscr.endpoint);
		window.location.href = '@?{(ContactR sid pid cid,[((paramBacklink,backlink))])}';
	      });
	    }
	    
	  });
  
	});
	
      }
      
    });
    
  } else {
    
    navigator.serviceWorker.ready.then(function (registration) {
      registration.pushManager.getSubscription().then(function (subscription) {

	let url = !!subscription
	    ? `@{PushSubscriptionsR sid pid}?endpoint=${subscription.endpoint}`
	    : '@{PushSubscriptionsR sid pid}'
	
	fetch(url, {
          method: 'DELETE',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(subscription)      
        }).then(function (result) {
	  window.location.href = '@?{(ContactR sid pid cid,[((paramBacklink,backlink))])}';
	});
	
      });
    });
  }
};
