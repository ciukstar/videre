

navigator.serviceWorker.register('@{ServiceWorkerR}', { scope: '/' }).then((registration) => {
  registration.addEventListener('updatefound', function (event) {

    if (#{authenicated}) {
      const endpoint = localStorage.getItem(#{localStorageEndpoint});

      if (endpoint) {
        
        registration.pushManager.getSubscription().then(function (subscription) {
          
          if (!subscription) {
            
            registration.pushManager.subscribe({
              userVisibleOnly: true,
              applicationServerKey: new Uint8Array(#{toJSON applicationServerKey})
            }).then((subscription) => {
              
              const subscr = JSON.parse(JSON.stringify(subscription));
              
              fetch('@{PushSubscriptionEndpointR}', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({
                  endpoint: subscr.endpoint,
                  p256dh: subscr.keys.p256dh,
                  auth: subscr.keys.auth,
                  oldendpoint: endpoint
                })
              }).then((response) => {
                localStorage.setItem(#{localStorageEndpoint}, subscr.endpoint);
              });
              
            }).catch((err) => {
              
              registration.pushManager.getSubscription().then((subscription) => {
                [subscription].filter(x => !!x).forEach((subscription) => {
                  subscription.unsubscribe().then((success) => {
                    registration.pushManager.subscribe({
                      userVisibleOnly: true,
                      applicationServerKey: new Uint8Array(#{toJSON applicationServerKey})
                    }).then((subscription) => {
                      
                      const subscr = JSON.parse(JSON.stringify(subscription));
                      
                      fetch('@{PushSubscriptionEndpointR}', {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                        body: new URLSearchParams({
                          endpoint: subscr.endpoint,
                          p256dh: subscr.keys.p256dh,
                          auth: subscr.keys.auth,
                          oldendpoint: endpoint
                        })
                      }).then((response) => {
                        localStorage.setItem(#{localStorageEndpoint}, subscr.endpoint);
                      });
                      
                    });
                  });
                });
              
              });
              
            });
        
          }
        });
        
      }

    }
    
  });
});


navigator.serviceWorker.addEventListener('message', (message) => {

  [ [ #{idButtonVideoCallDecline},
      #{idDialogIncomingVideoCall},
      #{idOverlayDialogIncomingVideoCall},
      #{idAudioIncomingVideoCallRingtone}
    ],
    [ #{idButtonAudioCallDecline},
      #{idDialogIncomingAudioCall},
      #{idOverlayDialogIncomingAudioCall},
      #{idAudioIncomingAudioCallRingtone}
    ]
  ].forEach(([buttonId, dialogId, overlayId, ringtoneId]) => {
    document.getElementById(buttonId).onclick = function (event) {
      fetch(message.data.targetPush, {
        method: 'POST',
        headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({
          messageType: #{PushMsgTypeDecline},
          title: #{msgr MsgAppName},
          icon: '@{StaticR img_phone_missed_FILL0_wght400_GRAD0_opsz24_svg}',
          body: #{msgr $ MsgCalleeDeclinedTheCall calleeName},
          videor: false,
          audior: false,
          videos: message.data.videos,
          audios: message.data.audios,
          callId: message.data.callId
        })
      }).then(function (result) {
        document.getElementById(ringtoneId).pause();
        document.getElementById(dialogId).close();
        document.getElementById(overlayId).classList.remove('active');
      });
    }
  });

  [ [ #{idButtonVideoCallAcceptAudio},
      #{idDialogIncomingVideoCall},
      #{idOverlayDialogIncomingVideoCall},
      { audio: true, video: false }
    ],
    [ #{idButtonAudioCallAcceptVideo},
      #{idDialogIncomingAudioCall},
      #{idOverlayDialogIncomingAudioCall},
      { audio: true, video: true }
    ]
  ].forEach(([buttonId, dialogId, overlayId, { audio, video }]) => {
    document.getElementById(buttonId).onclick = (event) => {
      fetch(message.data.targetPush, {
        method: 'POST',
        headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({
          messageType: #{PushMsgTypeAccept},
          title: #{msgr MsgAppName},
          icon: '@{StaticR img_phone_in_talk_FILL0_wght400_GRAD0_opsz24_svg}',
          body: #{msgr $ MsgInterlocutorStartedSession calleeName},
          videor: video,
          audior: audio,
          videos: message.data.videos,
          audios: message.data.audios,
          callId: message.data.callId
        })
      }).then((result) => {

        document.getElementById(dialogId).close();
        document.getElementById(overlayId).classList.remove('active');

        const params = new URLSearchParams({
          videor: message.data.videor,
          audior: message.data.audior,
          videos: video,
          audios: audio,
          backlink: '@{backlink}'
        });

        window.location.href = `${message.data.targetRoom}?${params}`;

      });
    };
  });

  [ [#{idButtonVideoCallAccept}, #{idDialogIncomingVideoCall}],
    [#{idButtonAudioCallAccept}, #{idDialogIncomingAudioCall}]
  ].forEach(([buttonId, dialogId]) => {
    document.getElementById(buttonId).onclick = (event) => {
      fetch(message.data.targetPush, {
        method: 'POST',
        headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({
          messageType: #{PushMsgTypeAccept},
          title: #{msgr MsgAppName},
          icon: '@{StaticR img_phone_in_talk_FILL0_wght400_GRAD0_opsz24_svg}',
          body: #{msgr $ MsgInterlocutorStartedSession calleeName},
          videor: message.data.videor,
          audior: message.data.audior,
          videos: message.data.videos,
          audios: message.data.audios,
          callId: message.data.callId
        })
      }).then((result) => {

        document.getElementById(dialogId).close();

        const params = new URLSearchParams({
          videor: message.data.videor,
          audior: message.data.audior,
          videos: message.data.videos,
          audios: message.data.audios,
          backlink: '@{backlink}'
        });

        window.location.href = `${message.data.targetRoom}?${params}`;

      });
    };
  });
  
});


document.getElementById(#{idButtonChatNotificationIgnore}).addEventListener('click', e => {
  document.getElementById(#{idAudioIncomingChatRingtone}).pause();
  document.getElementById(#{idDialogChatNotification}).close();
  document.getElementById(#{idOverlayDialogChatNotification}).classList.remove('active');
});


navigator.serviceWorker.addEventListener('message', function (message) {

  if (message.data.messageType === #{PushMsgTypeChat}) {
    
    document.getElementById(#{idImgSenderPhoto}).src = message.data.image;
    document.getElementById(#{idFigcaptionSenderInfo}).textContent = message.data.senderName;
    document.getElementById(#{idNotificationBody}).textContent = message.data.body;
    document.getElementById(#{idButtonReplyNotification}).href = message.data.targetRoom;

    document.getElementById(#{idOverlayDialogChatNotification}).classList.add('active');
    document.getElementById(#{idDialogChatNotification}).show();
    document.getElementById(#{idAudioIncomingChatRingtone}).play().catch(_ => {});

  } else if (message.data.messageType === #{PushMsgTypeCancel}) {

    document.getElementById(#{idAudioIncomingVideoCallRingtone}).pause();
    document.getElementById(#{idDialogIncomingVideoCall}).close();
    document.getElementById(#{idOverlayDialogIncomingVideoCall}).classList.remove('active');
    
    document.getElementById(#{idAudioIncomingAudioCallRingtone}).pause();
    document.getElementById(#{idDialogIncomingAudioCall}).close();
    document.getElementById(#{idOverlayDialogIncomingAudioCall}).classList.remove('active');
    
    document.getElementById(#{idMissedCallCaller}).textContent = message.data.senderName;
    document.getElementById(#{idOverlayDialogMissedCall}).classList.add('active');
    document.getElementById(#{idDialogMissedCall}).show();

  } else if (message.data.messageType === #{PushMsgTypeVideoCall}) {
    
    document.getElementById(#{idImgVideoCallerPhoto}).src = message.data.image;
    document.getElementById(#{idFigcaptionVideoCallerPhoto}).textContent = message.data.senderName;
    document.getElementById(#{idOverlayDialogIncomingVideoCall}).classList.add('active');
    document.getElementById(#{idDialogIncomingVideoCall}).show();
    document.getElementById(#{idAudioIncomingVideoCallRingtone}).play().catch(_ => {});

  } else if (message.data.messageType === #{PushMsgTypeAudioCall}) {
    
    document.getElementById(#{idImgAudioCallerPhoto}).src = message.data.image;
    document.getElementById(#{idFigcaptionAudioCallerPhoto}).textContent = message.data.senderName;
    document.getElementById(#{idOverlayDialogIncomingAudioCall}).classList.add('active');
    document.getElementById(#{idDialogIncomingAudioCall}).show();
    document.getElementById(#{idAudioIncomingAudioCallRingtone}).play().catch(_ => {});

  }

});



