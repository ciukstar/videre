

navigator.serviceWorker.register('@{ServiceWorkerR}', { scope: '/' }).then((registration) => {
  registration.addEventListener('updatefound', function (event) {

    if (#{authenicated}) {
      const endpoint = localStorage.getItem(#{localStorageEndpoint});

      if (endpoint) {
        
        registration.pushManager.getSubscription().then(function (subscription) {
          
          if (!subscription) {
            
            registration.pushManager.subscribe({
              userVisibleOnly: true,
              applicationServerKey: new Uint8Array(#{toJSON applicationServerKey})
            }).then((subscription) => {
              
              const subscr = JSON.parse(JSON.stringify(subscription));
              
              fetch('@{PushSubscriptionEndpointR}', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({
                  endpoint: subscr.endpoint,
                  p256dh: subscr.keys.p256dh,
                  auth: subscr.keys.auth,
                  oldendpoint: endpoint
                })
              }).then((response) => {
                localStorage.setItem(#{localStorageEndpoint}, subscr.endpoint);
              });
              
            }).catch((err) => {
              
              registration.pushManager.getSubscription().then((subscription) => {
                subscription.unsubscribe().then((sccess) => {
                  registration.pushManager.subscribe({
                    userVisibleOnly: true,
                    applicationServerKey: new Uint8Array(#{toJSON applicationServerKey})
                  }).then((subscription) => {
                    
                    const subscr = JSON.parse(JSON.stringify(subscription));
                    
                    fetch('@{PushSubscriptionEndpointR}', {
                      method: 'PUT',
                      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                      body: new URLSearchParams({
                        endpoint: subscr.endpoint,
                        p256dh: subscr.keys.p256dh,
                        auth: subscr.keys.auth,
                        oldendpoint: endpoint
                      })
                    }).then((response) => {
                      localStorage.setItem(#{localStorageEndpoint}, subscr.endpoint);
                    });
                    
                  });
                });
              });
              
            });
        
          }
        });
        
      }

    }
    
  });
});


navigator.serviceWorker.addEventListener('message', (message) => {

  [ [#{idButtonVideoCallDecline}, #{idDialogIncomingVideoCall}],
    [#{idButtonAudioCallDecline}, #{idDialogIncomingAudioCall}]
  ].forEach(([buttonId, dialogId]) => {
    document.getElementById(buttonId).onclick = function (event) {
      fetch(message.data.targetPush, {
        method: 'POST',
        headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({
          messageType: #{PushMsgTypeDecline},
          title: #{msgr MsgAppName},
          icon: '@{StaticR img_phone_missed_FILL0_wght400_GRAD0_opsz24_svg}',
          body: #{msgr $ MsgCalleeDeclinedTheCall calleeName},
          videor: false,
          audior: false,
          videos: message.data.videos,
          audios: message.data.audios,
          callId: message.data.callId
        })
      }).then(function (result) {
        document.getElementById(dialogId).close();
      });
    }
  });

  [ [#{idButtonVideoCallAcceptAudio}, #{idDialogIncomingVideoCall}, { audio: true, video: false }],
    [#{idButtonAudioCallAcceptVideo}, #{idDialogIncomingAudioCall}, { audio: true, video: true }]
  ].forEach(([buttonId, dialogId, { audio, video }]) => {
    document.getElementById(buttonId).onclick = (event) => {
      fetch(message.data.targetPush, {
        method: 'POST',
        headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({
          messageType: #{PushMsgTypeAccept},
          title: #{msgr MsgAppName},
          icon: '@{StaticR img_phone_in_talk_FILL0_wght400_GRAD0_opsz24_svg}',
          body: #{msgr $ MsgInterlocutorStartedSession calleeName},
          videor: video,
          audior: audio,
          videos: message.data.videos,
          audios: message.data.audios,
          callId: message.data.callId
        })
      }).then((result) => {

        document.getElementById(dialogId).close();

        const params = new URLSearchParams({
          videor: message.data.videor,
          audior: message.data.audior,
          videos: video,
          audios: audio,
          backlink: '@{backlink}'
        });

        window.location.href = `${message.data.targetRoom}?${params}`;

      });
    };
  });

  [ [#{idButtonVideoCallAccept}, #{idDialogIncomingVideoCall}],
    [#{idButtonAudioCallAccept}, #{idDialogIncomingAudioCall}]
  ].forEach(([buttonId, dialogId]) => {
    document.getElementById(buttonId).onclick = (event) => {
      fetch(message.data.targetPush, {
        method: 'POST',
        headders: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({
          messageType: #{PushMsgTypeAccept},
          title: #{msgr MsgAppName},
          icon: '@{StaticR img_phone_in_talk_FILL0_wght400_GRAD0_opsz24_svg}',
          body: #{msgr $ MsgInterlocutorStartedSession calleeName},
          videor: message.data.videor,
          audior: message.data.audior,
          videos: message.data.videos,
          audios: message.data.audios,
          callId: message.data.callId
        })
      }).then((result) => {

        document.getElementById(dialogId).close();

        const params = new URLSearchParams({
          videor: message.data.videor,
          audior: message.data.audior,
          videos: message.data.videos,
          audios: message.data.audios,
          backlink: '@{backlink}'
        });

        window.location.href = `${message.data.targetRoom}?${params}`;

      });
    };
  });
  
});

navigator.serviceWorker.addEventListener('message', function (message) {

  if (message.data.messageType === #{PushMsgTypeChat}) {
    
    document.getElementById(#{idImgSenderPhoto}).src = message.data.image;
    document.getElementById(#{idFigcaptionSenderInfo}).textContent = message.data.senderName;
    document.getElementById(#{idNotificationBody}).textContent = message.data.body;
    document.getElementById(#{idButtonReplyNotification}).href = message.data.targetRoom;
    document.getElementById(#{idDialogChatNotification}).show();
    document.getElementById(#{idDialogChatNotification}).dispatchEvent(new Event('open'));

  } else if (message.data.messageType === #{PushMsgTypeCancel}) {

    document.getElementById(#{idDialogIncomingVideoCall}).close();
    document.getElementById(#{idDialogIncomingVideoCall}).dispatchEvent(new Event('close'));
    document.getElementById(#{idDialogIncomingAudioCall}).close();
    document.getElementById(#{idDialogIncomingAudioCall}).dispatchEvent(new Event('close'));
    document.getElementById(#{idMissedCallCaller}).textContent = message.data.senderName;
    document.getElementById(#{idDialogMissedCall}).show();
    document.getElementById(#{idDialogMissedCall}).dispatchEvent(new Event('open'));

  } else if (message.data.messageType === #{PushMsgTypeVideoCall}) {
    
    document.getElementById(#{idImgVideoCallerPhoto}).src = message.data.image;
    document.getElementById(#{idFigcaptionVideoCallerPhoto}).textContent = message.data.senderName;
    document.getElementById(#{idDialogIncomingVideoCall}).show();
    document.getElementById(#{idDialogIncomingVideoCall}).dispatchEvent(new Event('open'));

  } else if (message.data.messageType === #{PushMsgTypeAudioCall}) {
    
    document.getElementById(#{idImgAudioCallerPhoto}).src = message.data.image;
    document.getElementById(#{idFigcaptionAudioCallerPhoto}).textContent = message.data.senderName;
    document.getElementById(#{idDialogIncomingAudioCall}).show();
    document.getElementById(#{idDialogIncomingAudioCall}).dispatchEvent(new Event('open'));

  }

});


[ [ #{idDialogChatNotification}, #{idAudioIncomingChatRingtone} ]
, [ #{idDialogIncomingVideoCall}, #{idAudioIncomingVideoCallRingtone} ]
, [ #{idDialogIncomingAudioCall}, #{idAudioIncomingAudioCallRingtone} ]
].forEach(([dialog,ringtone]) => {
  
  document.getElementById(dialog).addEventListener('open', (e) => {
    document.getElementById(#{idOverlay}).classList.add('active');
    document.getElementById(ringtone).play();
  });
  
  document.getElementById(dialog).addEventListener('close', (e) => {
    document.getElementById(ringtone).pause();
    document.getElementById(#{idOverlay}).classList.remove('active');
  });
  
});
